version: 2
jobs:
  build_and_test:
    working_directory: ~/repo 
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/my-docker-image.tar
      - run:
          name: Load Docker image layer cache
          command: docker load -i /caches/my-docker-image.tar || true
      - run:
          name: Build application Docker image (without ML model)
          command: docker build . -t ci-workshop-app:base --cache-from=ci-workshop-app:base --target Base
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/my-docker-image.tar ci-workshop-app:base
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/my-docker-image.tar
      - run:
          name: run unit tests
          command: docker run ci-workshop-app:base bin/test.sh
      - run:
          name: Build application Docker image (with ML model)
          command: docker build . -t ci-workshop-app:build --cache-from=ci-workshop-app:base --target Build
      - run:
          name: run model metrics tests
          command: docker run ci-workshop-app:build bin/test_model_metrics.sh
      - run: 
          name: setup google cloud SDK + authenticate
          command: bin/authenticate_gcloud.sh
      - run:
          name: push artifact to container registry
          command: bin/save_artifact_on_gcr.sh
  deploy_to_gcp:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run: 
          name: setup google cloud SDK + authenticate
          command: bin/authenticate_gcloud.sh
      - setup_remote_docker
      - run:
          name: Deploy image to kubernetes
          command: bin/kubernetes/deploy.sh

workflows:
  version: 2
  my_ci_pipeline:
    jobs:
      - build_and_test
      - deploy_to_gcp:
          requires:
            - build_and_test